{"version":3,"file":"static/js/115.5c6b77e2.chunk.js","mappings":"yNAqDA,UA9Ca,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,8GAEcC,EAAAA,EAAAA,IAAeJ,GAF7B,OAENK,EAFM,OAGZN,EAAQM,GACRC,QAAQC,IAAIF,GAJA,gDAMZC,QAAQC,IAAR,MANY,yDAAH,qDASbJ,GACD,GAAE,CAACH,KAGF,gCACmB,IAAhBF,EAAKU,SACJ,0BACE,wBACGV,EAAKW,KAAI,SAAAC,GACR,OACE,2BACE,gBACEC,MAAM,MACNC,IACEF,EAAMG,aAAN,yCACsCH,EAAMG,cA/BhE,8EAkCkBC,IAAKJ,EAAMK,iBAEb,sCAAcL,EAAMM,eAVbN,EAAMO,GAalB,QAIU,IAAhBnB,EAAKU,SAAgB,sEAG3B,C,+LChDDU,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,CACbA,OAAQ,CACNC,QALY,qCASHC,EAAmB,mCAAG,oGACVH,EAAAA,EAAAA,IAAA,sBAAiCC,GADvB,cAC3BG,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnBC,EAAiB,mCAAG,WAAMzB,GAAN,uFACRkB,EAAAA,EAAAA,IAAA,iBAAoBlB,GAAWmB,GADvB,cACzBG,EADyB,yBAGxBA,EAASC,MAHe,2CAAH,sDAMjBG,EAAY,mCAAG,WAAMC,GAAN,uFACHT,EAAAA,EAAAA,IAAA,8BAAiCS,GAAaR,GAD3C,cACpBG,EADoB,yBAEnBA,EAASC,KAAKC,SAFK,2CAAH,sDAKZpB,EAAc,mCAAG,WAAMJ,GAAN,uFACLkB,EAAAA,EAAAA,IAAA,gBAAmBlB,EAAnB,YAAsCmB,GADjC,cACtBG,EADsB,yBAGrBA,EAASC,KAAKzB,MAHO,2CAAH,sDAMd8B,EAAiB,mCAAG,WAAM5B,GAAN,uFACRkB,EAAAA,EAAAA,IAAA,gBAAmBlB,EAAnB,aAAuCmB,GAD/B,cACzBG,EADyB,yBAGxBA,EAASC,KAAKC,SAHU,2CAAH,qD","sources":["pages/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'services/api';\n\nconst defaultImg =\n  'https://profnastil.by/local/templates/aspro-stroy/images/noimage_detail.png';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const castOfMovie = await fetchMovieCast(movieId);\n        setCast(castOfMovie);\n        console.log(castOfMovie);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {cast.length !== 0 && (\n        <div>\n          <ul>\n            {cast.map(actor => {\n              return (\n                <li key={actor.id}>\n                  <img\n                    width=\"200\"\n                    src={\n                      actor.profile_path\n                        ? `https://image.tmdb.org/t/p/w300${actor.profile_path}`\n                        : defaultImg\n                    }\n                    alt={actor.original_name}\n                  />\n                  <p>Character:{actor.character}</p>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n      {cast.length === 0 && <div>We don't have any cast for this movie.</div>}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'a4e0e6c94492c515df52f4a6ebcc54c7';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n\n  return response.data;\n};\n\nexport const handleSearch = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits`, params);\n\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`, params);\n\n  return response.data.results;\n};\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","getCast","fetchMovieCast","castOfMovie","console","log","length","map","actor","width","src","profile_path","alt","original_name","character","id","axios","params","api_key","fetchTrendingMovies","response","data","results","fetchMovieDetails","handleSearch","movieName","fetchMovieReviews"],"sourceRoot":""}