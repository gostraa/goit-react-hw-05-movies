{"version":3,"file":"static/js/736.4baf4382.chunk.js","mappings":"yNAwCA,UApCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEcC,EAAAA,EAAAA,IAAkBJ,GAFhC,OAETK,EAFS,OAGfC,QAAQC,IAAIF,GACZN,EAAWM,GAJI,gDAMfC,QAAQC,IAAR,MANe,yDAAH,qDAShBJ,GACD,GAAE,CAACH,KAGF,gCACsB,IAAnBF,EAAQU,SACP,wBACGV,EAAQW,KAAI,SAAAC,GAAM,OACjB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,MAQH,IAAnBf,EAAQU,SACP,yEAIP,C,+LCnCDM,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,CACbA,OAAQ,CACNC,QALY,qCASHC,EAAmB,mCAAG,oGACVH,EAAAA,EAAAA,IAAA,sBAAiCC,GADvB,cAC3BG,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnBC,EAAiB,mCAAG,WAAMrB,GAAN,uFACRc,EAAAA,EAAAA,IAAA,iBAAoBd,GAAWe,GADvB,cACzBG,EADyB,yBAGxBA,EAASC,MAHe,2CAAH,sDAMjBG,EAAY,mCAAG,WAAMC,GAAN,uFACHT,EAAAA,EAAAA,IAAA,8BAAiCS,GAAaR,GAD3C,cACpBG,EADoB,yBAEnBA,EAASC,KAAKC,SAFK,2CAAH,sDAKZI,EAAc,mCAAG,WAAMxB,GAAN,uFACLc,EAAAA,EAAAA,IAAA,gBAAmBd,EAAnB,YAAsCe,GADjC,cACtBG,EADsB,yBAGrBA,EAASC,KAAKM,MAHO,2CAAH,sDAMdrB,EAAiB,mCAAG,WAAMJ,GAAN,uFACRc,EAAAA,EAAAA,IAAA,gBAAmBd,EAAnB,aAAuCe,GAD/B,cACzBG,EADyB,yBAGxBA,EAASC,KAAKC,SAHU,2CAAH,qD","sources":["pages/Reviews.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        const reviewsOfMovie = await fetchMovieReviews(movieId);\n        console.log(reviewsOfMovie);\n        setReviews(reviewsOfMovie);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length !== 0 && (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h4>Author: {review.author}</h4>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      {reviews.length === 0 && (\n        <div>We don't have any reviews for this movie.</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'a4e0e6c94492c515df52f4a6ebcc54c7';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n\n  return response.data;\n};\n\nexport const handleSearch = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits`, params);\n\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`, params);\n\n  return response.data.results;\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","fetchMovieReviews","reviewsOfMovie","console","log","length","map","review","author","content","id","axios","params","api_key","fetchTrendingMovies","response","data","results","fetchMovieDetails","handleSearch","movieName","fetchMovieCast","cast"],"sourceRoot":""}