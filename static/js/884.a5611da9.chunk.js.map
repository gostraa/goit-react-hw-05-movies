{"version":3,"file":"static/js/884.a5611da9.chunk.js","mappings":"iOA0EA,UApEqB,WAAO,IAAD,EACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,SAAO,UAAAH,EAASI,aAAT,eAAgBC,OAAQ,KAEhD,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAcA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEcC,EAAAA,EAAAA,IAAkBb,GAFhC,OAETc,EAFS,OAGfJ,EAAgBI,GAHD,gDAMfC,QAAQC,IAAR,MANe,yDAAH,qDAShBJ,GACD,GAAE,CAACZ,IAGFS,IACE,gCACE,SAAC,KAAD,CAAMQ,GAAIb,EAASc,QAAnB,mCAEA,0BACE,gBACEC,MAAM,MACNC,OAAO,MACPC,IACEZ,EAAaa,YAAb,6CAC0Cb,EAAaa,aAjClD,sCAoCPC,IAAKd,EAAae,WAItB,4BACE,0BACGf,EAAae,MADhB,IACwBC,SAAShB,EAAaiB,cAD9C,QAGA,uCAAeD,SAAqC,GAA5BhB,EAAakB,cAArC,QACA,sCACA,uBAAIlB,EAAamB,YACjB,oCACA,wBACGnB,EAAaoB,OAAOC,KAAI,SAAAC,GACvB,OAAO,wBAAoBA,EAAMC,MAAjBD,EAAME,GACvB,UAGL,2BACE,yBACE,SAAC,KAAD,CAAMhB,GAAI,OAAV,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAI,SAAV,0BAGJ,SAAC,EAAAiB,SAAD,CAAUC,UAAU,sCAApB,UACE,SAAC,KAAD,QAKT,C,+LCrEDC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,CACbA,OAAQ,CACNC,QALY,qCASHC,EAAmB,mCAAG,oGACVH,EAAAA,EAAAA,IAAA,sBAAiCC,GADvB,cAC3BG,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnB7B,EAAiB,mCAAG,WAAMb,GAAN,uFACRoC,EAAAA,EAAAA,IAAA,iBAAoBpC,GAAWqC,GADvB,cACzBG,EADyB,yBAGxBA,EAASC,MAHe,2CAAH,sDAMjBE,EAAY,mCAAG,WAAMC,GAAN,uFACHR,EAAAA,EAAAA,IAAA,8BAAiCQ,GAAaP,GAD3C,cACpBG,EADoB,yBAEnBA,EAASC,KAAKC,SAFK,2CAAH,sDAKZG,EAAc,mCAAG,WAAM7C,GAAN,uFACLoC,EAAAA,EAAAA,IAAA,gBAAmBpC,EAAnB,YAAsCqC,GADjC,cACtBG,EADsB,yBAGrBA,EAASC,KAAKK,MAHO,2CAAH,sDAMdC,EAAiB,mCAAG,WAAM/C,GAAN,uFACRoC,EAAAA,EAAAA,IAAA,gBAAmBpC,EAAnB,aAAuCqC,GAD/B,cACzBG,EADyB,yBAGxBA,EAASC,KAAKC,SAHU,2CAAH,qD","sources":["pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/api';\n\nconst defaultImg = 'https://cleanshop.ru/i/no_image.gif';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLink = useRef(location.state?.from || '/');\n\n  const [movieDetails, setMovieDetails] = useState(null);\n  useEffect(() => {\n    const getDetails = async () => {\n      try {\n        const detailsOfMovie = await fetchMovieDetails(movieId);\n        setMovieDetails(detailsOfMovie);\n        // console.log(detailsOfMovie);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getDetails();\n  }, [movieId]);\n\n  return (\n    movieDetails && (\n      <section>\n        <Link to={backLink.current}>↩️ Go Back</Link>\n\n        <div>\n          <img\n            width=\"230\"\n            height=\"300\"\n            src={\n              movieDetails.poster_path\n                ? `https://image.tmdb.org/t/p/original${movieDetails.poster_path}`\n                : defaultImg\n            }\n            alt={movieDetails.title}\n          />\n        </div>\n\n        <div>\n          <h1>\n            {movieDetails.title}({parseInt(movieDetails.release_date)})\n          </h1>\n          <p>User Score:{parseInt(movieDetails.vote_average * 10)}%</p>\n          <h2>Overview</h2>\n          <p>{movieDetails.overview}</p>\n          <h2>Genres</h2>\n          <ul>\n            {movieDetails.genres.map(genre => {\n              return <li key={genre.id}>{genre.name}</li>;\n            })}\n          </ul>\n        </div>\n        <ul>\n          <li>\n            <Link to={'cast'}>Cast</Link>\n          </li>\n          <li>\n            <Link to={'review'}>Review</Link>\n          </li>\n        </ul>\n        <Suspense fallback={<p>Loading...</p>}>\n          <Outlet />\n        </Suspense>\n      </section>\n    )\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'a4e0e6c94492c515df52f4a6ebcc54c7';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n\n  return response.data;\n};\n\nexport const handleSearch = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits`, params);\n\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`, params);\n\n  return response.data.results;\n};\n"],"names":["movieId","useParams","location","useLocation","backLink","useRef","state","from","useState","movieDetails","setMovieDetails","useEffect","getDetails","fetchMovieDetails","detailsOfMovie","console","log","to","current","width","height","src","poster_path","alt","title","parseInt","release_date","vote_average","overview","genres","map","genre","name","id","Suspense","fallback","axios","params","api_key","fetchTrendingMovies","response","data","results","handleSearch","movieName","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}